# 5-text_identation.txt

This function prints a text with 2 new lines after each of these characters: `.`, `?` and `:`.
It raises a `TypeError` exception if `text` isn't a string.
There should be no space at the beginning or at the end of each printed line.

Import:
>>> text_indentation = __import__('5-text_indentation').text_indentation

Tests:
>>> text_indentation("Hello. How are you? are you: John")
Hello.
<BLANKLINE>
How are you?
<BLANKLINE>
are you:
<BLANKLINE>
John
>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens""")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens

>>> text_indentation(12)
Traceback (most recent call last):
...
TypeError: text must be a string
